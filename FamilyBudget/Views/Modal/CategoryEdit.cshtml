@model FamilyBudget.ModalViewModels.CategoryModel

@{
    ViewData["Title"] = "CategoryEdit";
}

<div class="modal-content">
    <div class="modal-header pb-2">
        @if (@Model.IsNotFound)
        {
            <h3 class="modal-title text-danger">This project is not found.</h3>
        }
        else if (@Model.IsForbid)
        {
            <h3 class="modal-title text-danger">This project is forbidden.</h3>
        }
        else
        {
            <h3 class="modal-title">Редактировать категорию</h3>
        }

        <button class="bi bi-x-lg btn" data-dismiss="modal" aria-label="Close"></button>
    </div>
    @if (Model.IsValid)
    {
        <form asp-controller="Categories" asp-action="Edit">
            <div class="modal-body container-fluid">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <input type="hidden" asp-for="Id"/>
                    <input type="hidden" asp-for="ProjectId"/>
                </div>
            </div>
            <div class="modal-footer p-2">
                <input type="submit" value="Сохранить" class="btn btn-success btn-ok" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Отмена</button>
            </div>
        </form>
    }
    else
    {
        <div class="modal-footer p-2">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Отмена</button>
        </div>
    }
</div>

@section Scripts {
        @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}