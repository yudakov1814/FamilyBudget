@model FamilyBudget.Models.View.Edit.HomeProjectEditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<div class="row">
    <div class="container-fluid">
        <form asp-controller="Projects" asp-action="Edit" asp-route-id="@Model.projectId">
            <div class="form-group">
                <label asp-for="@Model.project.Name" class="control-label"></label>
                <input asp-for="@Model.project.Name" class="form-control" placeholder="Project name" />
                <input type="hidden" asp-for="@Model.project.Id" />
                <input type="hidden" asp-for="@Model.project.OwnerId" />
                <span asp-validation-for="@Model.project.Name" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-4">
                    <h4 class="text-center">Categories</h4>
                    <a class="addCategory pull-right bi bi-plus-circle" style="cursor: pointer"></a>

                    <div id="categoryList" class="list-group" count="@Model.categories.Count">
                        @for (var i = 0; i < Model.categories.Count; i++)
                        {
                             <div id="category_@i" class="list-group-item list-group-item-action">
                                 <div class="row justify-content-between align-items-center">
                                    <span  class="col-sm-11">
                                        <input id="cetagoryId_@i" asp-for="@Model.categories[i].Id" type="hidden"/>
                                        <input id="categoryName_@i" asp-for="@Model.categories[i].Name" class="form-control"/>
                                    </span>

                                    <i id="@i" class="categoryDelete bi bi-x-lg mr-2" style="cursor: pointer"></i>
                                 </div>
                             </div>
                        }
                    </div>
                </div>
                <div class="col-8">
                    <h4 class="text-center">ProjectMembers</h4>
                    <a class="addProjectMember pull-right bi bi-plus-circle" style="cursor: pointer"></a>

                    <div id="projectMemberList" class="list-group" count="@Model.categories.Count">

                        @for (var i = 0; i < Model.projectMembers.Count; i++)
                        {
                             <div id="projectMember_@i" class="list-group-item list-group-item-action">
                                 <div class="row justify-content-between align-items-center">

                                     <input id="projectMemberId_@i" asp-for="@Model.projectMembers[i].Id" type="hidden"/>
                                     <input asp-for="@Model.projectMembers[i].NameInProject" class="form-control col-sm-5 ml-3 mr-2" value="@Model.projectMembers[i].NameInProject" />
                                     <input asp-for="@Model.projectMembers[i].User.Email" class="form-control col-sm-5 mr-2" value="@Model.projectMembers[i].User.Email" />

                             
                                 <i id="@i" class="projectMemberDelete bi bi-x-lg mr-2" style="cursor: pointer"></i>
                                 </div>
                             </div>
                        }
                    </div>
                </div>
            </div>
            <div class="pull-right">
                <input class="btn btn-primary mr-2" type="submit" value="Save" />
                <a class="btn btn-secondary" asp-action="Index">Back</a>
            </div>
        </form>
    </div>
</div>

@section scripts
    {
<script type="text/javascript">
    
    const generateCategory = (id) => {
            return `
                <div class="row justify-content-between align-items-center">
                    <span class="col-sm-11">
                        <input id="cetagoryId_${id}" type="hidden" name="categories[${id}].Id" value="-1"/>
                        <input id="categoryName_${id}" type="text" class="form-control" name="categories[${id}].Name" placeholder="Новая категория"/> 
                    </span>
    
                    <i id="categoryDelete_${id}" class="bi bi-x-lg mr-2" style="cursor: pointer"></i>
                </div>
                   `;
    }
    
    const generateProjectMember = (id) => {
            return  `
                <div class="row justify-content-between align-items-center">
                    <input id="projectMemberId_${id}" type="hidden" name="projectMembers[${id}].Id" value="-1"/>
                    <input id="projectMemberName_${id}" type="text" class="form-control col-sm-5 ml-3 mr-2" name="projectMembers[${id}].NameInProject" placeholder="Имя"/>
                    <input id="projectMemberEmail_${id}" type="text" class="form-control col-sm-5 mr-2" name="projectMembers[${id}].User.Email" placeholder="Email"/>

    
                    <i id="projectMemberDelete_${id}" class="bi bi-x-lg mr-2" style="cursor: pointer"></i>
                </div>`;
    }
    
    $(document).ready(function () {
        
        let categoryList = document.querySelector('#categoryList');
        let projectMemberList = document.querySelector('#projectMemberList');
        var cat_id = categoryList.getAttribute("count");
        var pm_id =  projectMemberList.getAttribute("count");
    
    
        //-- Category --
    
        $(".categoryDelete").click(function (e) {
            e.preventDefault();
            $("#category_" + this.id).fadeOut(500);
            setTimeout(function(){
                $("#categoryName_" + id).val("deleted");
            }, 500); 
        });
    
        $(".addCategory").click(function (e) {
            e.preventDefault();
            var id = cat_id++;
    
            var div = document.createElement('div');
            div.innerHTML = generateCategory(id);
            div.classList.add('list-group-item','list-group-item-action');
            div.setAttribute('id','category_' + id);
            categoryList.insertBefore(div,categoryList.firstElementChild);
            $("#category_" + id).hide().show(500);
    
    
            $("#categoryDelete_" + id).click(function (e) {
                e.preventDefault();
                $("#category_" + id).fadeOut(500);
                setTimeout(function(){
                    $("#categoryName_" + id).val("deleted");
                }, 500);                 
            });
        });
    
        
        //--!
    
    
        //-- ProjectMember --       
    
        $(".projectMemberDelete").click(function (e) {
            e.preventDefault();
            $("#projectMember_" + this.id).fadeOut(500);
            setTimeout(function(){
                $("#projectMemberName_" + id).val("deleted");
            }, 500);    
        });
    
    
        $(".addProjectMember").click(function (e) {
            e.preventDefault();
            var id = pm_id++;
    
            var div = document.createElement('div');
            div.innerHTML = generateProjectMember(id);
            div.classList.add('list-group-item','list-group-item-action');
            div.setAttribute('id','projectMember_' + id);
            projectMemberList.insertBefore(div,projectMemberList.firstElementChild);
            $("#projectMember_" + id).hide().show(500);
    
            $("#projectMemberDelete_" + id).click(function (e) {
                e.preventDefault();
                $("#projectMember_" + id).fadeOut(500);                
                setTimeout(function(){
                    $("#projectMemberName_" + id).val("deleted");
                }, 500);  
            });
        });
    
    
        //--!
    });
</script>
}
