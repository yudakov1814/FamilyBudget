@using FamilyBudget.Models.View.Enums
@model FamilyBudget.Models.View.Details.HomeProjectDetailsModel

@{
    ViewData["Title"] = "Details";
}


<div id="finOperationDeleteModal" class="modal fade">
    <div id="finOperationDeleteDialogContent" class="modal-dialog modal-dialog-centered modal-lg"></div>
</div>

<div id="finOperationEditModal" class="modal fade">
    <div id="finOperationEditDialogContent" class="modal-dialog modal-dialog-centered"></div>
</div>


<div id="addFinOpModal" class="modal fade">
    <div id="addFinOpDialogContent" class="modal-dialog modal-dialog-centered"></div>
</div>
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="flex-grow-1">@Model.ProjectName</h3>

            <a asp-controller="Modal" asp-action="AddIncome" asp-route-id="@Model.FilterViewModel.SelectedProject"
               class="btn btn-sm btn-warning addIncome m-2 align">Income <i class="bi bi-plus-lg"></i></a>
            <a asp-controller="Modal" asp-action="AddCharge" asp-route-id="@Model.FilterViewModel.SelectedProject"
               class="btn btn-sm btn-info btn addCharge m-2 pull-right">Charge <i class="bi bi-plus-lg"></i></a>
        </div>

    </div>
    <div class="card-body">
        <form>
            <div class="form-inline">
                <span style="display:inline-block" class="col-sm-1 ml-2 mr-auto">
                <small class="form-text">FinType:</small>
                <select type="submit" class="form-control" name="finType"
                        asp-for="@Model.FilterViewModel.SelectedFinType"
                        asp-items="@Model.FilterViewModel.FinTypes"
                        onchange="this.form.submit()"></select>
                </span>

                <span style="display:inline-block" class="col-2">
                <small class="form-text">ProjectMember:</small>
                <select type="submit" asp-for="@Model.FilterViewModel.SelectedProjectMember" class="form-control" name="projectMember"
                asp-items="@Model.ProjectMembers" onchange="this.form.submit()"></select>
                </span>

                <span style="display:inline-block" class="col-3 m-auto">
                <small class="form-text">Category:</small>
                <input type="text" id="inputCategory" data-projectId="@Model.FilterViewModel.SelectedProject" autocomplete="off" placeholder="Category"
                       class="form-control" name="category" value="@Model.FilterViewModel.SelectedCategory" />
                </span>

                <span style="display:inline-block" class="col-2 m-1">
                <small class="form-text">from:</small>
                <input class="form-control" type="date" name="beginDate" asp-for="@Model.FilterViewModel.SelectedBeginDate">
                </span>

                <span style="display:inline-block" class="col-2 m-1">
                <small class="form-text">to:</small>
                <input class="form-control" type="date" name="endDate" asp-for="@Model.FilterViewModel.SelectedEndDate">
                </span>
            </div>
        </form>
    </div>
</div>
<div class="row">
    @if (Model.FilterViewModel.SelectedFinType == FinType.Charge)
    {
        <div class="col-1"></div>
        <div class="col-4">
            <canvas id="PieByCategory"></canvas>
        </div>
        <div class="col-1"></div>
        <div class="col-1"></div>
        <div class="col-4">
            <canvas id="PieByProjectMember"></canvas>
        </div>
        <div class="col-1"></div>
    }
    else if (Model.FilterViewModel.SelectedFinType == FinType.Income)
    {
        <div class="col-4"></div>
        <div class="col-4">
            <canvas id="PieByProjectMember"></canvas>
        </div>
        <div class="col-4"></div>
    }
    else
    {
        <div class="col-4"></div>
        <div class="col-4">
            <canvas id="PieByFinOp"></canvas>
        </div>
        <div class="col-4"></div>
    }
</div>
<div class="card">
    @if (!Model.IsEmpty)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a class="btn btn-sm @(Model.SortViewModel.categorySort ? "btn-primary" : "btn-light")"
                       asp-action="Details"
                       asp-route-id="@(Model.FilterViewModel.SelectedProject)"
                       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
                       asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.Category)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.Category) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Category
                            @if (@Model.SortViewModel.categorySort)
                            {
                                <i class="fa fa-fw @(Model.SortViewModel.isAscending ? "fa-sort-asc" : "fa-sort-desc")"></i>
                            }
                            else
                            {
                                <i class="fa fa-fw fa-sort"></i>
                            }
                        </a>
                    </th>

                    <th>
                        <a class="btn btn-sm @(Model.SortViewModel.projectMemberSort ? "btn-primary" : "btn-light")"
                       asp-action="Details"
                       asp-route-id="@(Model.FilterViewModel.SelectedProject)"
                       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
                       asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.ProjectMember)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.ProjectMember) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            ProjectMember
                            @if (@Model.SortViewModel.projectMemberSort)
                            {
                                <i class="fa fa-fw @(Model.SortViewModel.isAscending ? "fa-sort-asc" : "fa-sort-desc")"></i>
                            }
                            else
                            {
                                <i class="fa fa-fw fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn btn-sm @(Model.SortViewModel.valueSort ? "btn-primary" : "btn-light")"
                       asp-action="Details"
                       asp-route-id="@(Model.FilterViewModel.SelectedProject)"
                       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
                       asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.Value)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.Value) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            Value
                            @if (@Model.SortViewModel.valueSort)
                            {
                                <i class="fa fa-fw @(Model.SortViewModel.isAscending ? "fa-sort-asc" : "fa-sort-desc")"></i>
                            }
                            else
                            {
                                <i class="fa fa-fw fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn btn-sm @(Model.SortViewModel.createTimeSort ? "btn-primary" : "btn-light")"
                       asp-action="Details"
                       asp-route-id="@(Model.FilterViewModel.SelectedProject)"
                       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
                       asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.CreateTime)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.CreateTime) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            CreateTime
                            @if (@Model.SortViewModel.createTimeSort)
                            {
                                <i class="fa fa-fw @(Model.SortViewModel.isAscending ? "fa-sort-asc" : "fa-sort-desc")"></i>
                            }
                            else
                            {
                                <i class="fa fa-fw fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="btn btn-sm @(Model.SortViewModel.finTypeSort ? "btn-primary" : "btn-light")"
                       asp-action="Details"
                       asp-route-id="@(Model.FilterViewModel.SelectedProject)"
                       asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
                       asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
                       asp-route-sortmodel="@(FinOperationSortModelEnum.FinType)"
                       asp-route-sortdir="@(!Model.SortViewModel.sortModelChanged(FinOperationSortModelEnum.FinType) ?
                                                null : Model.SortViewModel.changeSortDir(Model.SortViewModel.CurrentSortDir))">
                            FinType
                            @if (@Model.SortViewModel.finTypeSort)
                            {
                                <i class="fa fa-fw @(Model.SortViewModel.isAscending ? "fa-sort-asc" : "fa-sort-desc")"></i>
                            }
                            else
                            {
                                <i class="fa fa-fw fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (FinOperation fo in Model.FinOperations)
                {
                    <tr>
                        <td class="col-3">
                            @if (fo.Category != null)
                            {
                                <label>@fo.Category.Name</label>
                            }
                        </td>
                        <td class="col-3">
                            @if (fo.ProjectMember != null)
                            {
                                <label>@fo.ProjectMember.NameInProject</label>
                            }
                            else
                            {
                                <label>Семья</label>
                            }
                        </td>
                        <td class="col-2">@fo.Value</td>
                        <td class="col-2">
                            @if (@fo.CreateTime.Date == DateTime.Today.Date)
                            {
                                <label>Сегодня</label>
                            }
                            else if (@fo.CreateTime.Date == DateTime.Today.AddDays(-1).Date)
                            {
                                <label>Вчера</label>
                            }
                            else if (@fo.CreateTime.Date.Year == DateTime.Now.Year)
                            {
                                <label>@fo.CreateTime.ToString("d MMMM")</label>
                            }
                            else
                            {
                                <label>@fo.CreateTime.ToString("d MMMM yyyy")</label>
                            }
                        </td>
                        <td class="col-3">@fo.FinType</td>
                        <td id="@fo.Id" class="bi bi-pencil finOperationEdit" style="cursor: pointer"></td>
                        <td id="@fo.Id" class="bi bi-x-lg finOperationDelete" style="cursor: pointer"></td>
                    </tr>
                }
            </tbody>
        </table>


        <ul class="pagination justify-content-center">
            <li class="page-item @(!Model.PageViewModel.HasPreviousPage ? "disabled" : "")">
                <a asp-action="Details"
               asp-route-id="@(Model.FilterViewModel.SelectedProject)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
               asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
               asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
               asp-route-sortmodel="@(Model.SortViewModel.CurrentSortModel)"
               asp-route-sortdir="@(Model.SortViewModel.CurrentSortDir)"
               class="page-link">
                    Previous
                </a>
            </li>
            <li class="page-item @(!Model.PageViewModel.HasNextPage ? "disabled" : "")">
                <a asp-action="Details"
               asp-route-id="@(Model.FilterViewModel.SelectedProject)"
               asp-route-category="@(Model.FilterViewModel.SelectedCategory)"
               asp-route-fintype="@(Model.FilterViewModel.SelectedFinType)"
               asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
               asp-route-sortmodel="@(Model.SortViewModel.CurrentSortModel)"
               asp-route-sortdir="@(Model.SortViewModel.CurrentSortDir)"
               class="page-link">
                    Next
                </a>
            </li>
        </ul>
    }
    else
    {
        <h4 class="text-center p-5">No FinOperation found.</h4>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const CHART_COLORS = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
    };

    const NAMED_COLORS = [
        CHART_COLORS.red,
        CHART_COLORS.orange,
        CHART_COLORS.yellow,
        CHART_COLORS.green,
        CHART_COLORS.blue,
        CHART_COLORS.purple,
        CHART_COLORS.grey,
    ];

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByCategory.Select(x => x.Name).ToList())),
            datasets: [{
                label: 'PieByCategory',
                data: @Html.Raw(Json.Serialize(Model.PieByCategory.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'Grouped by category'
                    }
                }
            },
        };

        const PieByCategory = document.getElementById('PieByCategory')

        if (PieByCategory) {
            new Chart(
                PieByCategory,
                config
            );
        }
    }

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByProjectMember.Select(x => x.Name).ToList())),
            datasets: [{
                label: 'PieByProjectMember',
                data: @Html.Raw(Json.Serialize(Model.PieByProjectMember.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'Grouped by project member'
                    }
                }
            },
        };

        const PieByProjectMember = document.getElementById('PieByProjectMember')

        if (PieByProjectMember) {
            new Chart(
                PieByProjectMember,
                config
            );
        }
    }

    {
        const data = {
            labels: @Html.Raw(Json.Serialize(Model.PieByFinOp.Select(x => x.Name).ToList())),
            datasets: [{
                data: @Html.Raw(Json.Serialize(Model.PieByFinOp.Select(x => x.Value).ToList())),
                backgroundColor: Object.values(CHART_COLORS),
            }]
        };

        const config = {
            type: 'pie',
            data: data,
            options: {
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    title: {
                        display: true,
                        text: 'Grouped by financial operation'
                    }
                }
            },
        };

        const PieByFinOp = document.getElementById('PieByFinOp')

        if (PieByFinOp) {
            new Chart(
                PieByFinOp,
                config
            );
        }
    }
</script>



@section scripts
{
<script type="text/javascript">

    $(document).ready(function () {

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".addCharge").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#addFinOpDialogContent').html(data);
                    $('#addFinOpModal').modal('show');
                });
            });
        })

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".addIncome").click(function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#addFinOpDialogContent').html(data);
                    $('#addFinOpModal').modal('show');
                });
            });
        });

        $("#inputCategory").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Categories/SearchCategories/",
                    data: {
                        "id": $("#inputCategory").attr("data-projectId"),
                        "term": request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                });
            },
            select: function (event, ui) {
                this.value = ui.item.value;
                this.form.submit();
            }
        });

        $(".finOperationDelete").click(function (e) {
            e.preventDefault();
            $.get("/Modal/FinOperationDelete/" + this.id, function (data) {
                $('#finOperationDeleteDialogContent').html(data);
                $('#finOperationDeleteModal').modal('show');
            });
        });

        $(".finOperationEdit").click(function (e) {
            e.preventDefault();
            $.get("/Modal/FinOperationEdit/" + this.id, function (data) {
                $('#finOperationEditDialogContent').html(data);
                $('#finOperationEditModal').modal('show');
            });
        });
    });
</script>
}


